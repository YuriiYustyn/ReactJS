[{"C:\\Users\\pc\\ReactJS\\my-app\\src\\index.js":"1","C:\\Users\\pc\\ReactJS\\my-app\\src\\App.js":"2","C:\\Users\\pc\\ReactJS\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\ReactJS\\my-app\\src\\components\\Timer-1.js":"4","C:\\Users\\pc\\ReactJS\\my-app\\src\\components\\Timer-2.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":335,"mtime":1611241187812,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2067,"mtime":1611241317420,"results":"10","hashOfConfig":"7"},{"size":1799,"mtime":1611239151850,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b4gfiz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"C:\\Users\\pc\\ReactJS\\my-app\\src\\index.js",[],"C:\\Users\\pc\\ReactJS\\my-app\\src\\App.js",["24"],"C:\\Users\\pc\\ReactJS\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\ReactJS\\my-app\\src\\components\\Timer-1.js",["25","26"],"C:\\Users\\pc\\ReactJS\\my-app\\src\\components\\Timer-2.js",["27"],"import React from \"react\"\r\n// import  { Component } from 'react'\r\n\r\nclass Timerr extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         count: `${this.props.count}`,\r\n         length: 1540,\r\n         schritt: `${this.props.schritt}`,\r\n         autostart: `${this.props.autostart}`\r\n      }\r\n      this.startTimer = this.startTimer.bind(this)\r\n      this.stopTimer = this.stopTimer.bind(this)\r\n      this.resetTimer = this.resetTimer.bind(this)\r\n   }\r\n\r\n\r\n   startTimer() {\r\n\r\n      this.timer = setInterval(() => {\r\n         if (this.state.count > 0) {\r\n            this.setState({\r\n               count: this.state.count - this.state.schritt,\r\n               length: this.state.length - 154\r\n            })\r\n         } else {\r\n            clearInterval(this.timer)\r\n            this.setState({ count: \"Час вийшов\" })\r\n         }\r\n      }, 1000)\r\n      let segmentt =\r\n         setInterval(() => {\r\n\r\n            document.querySelector(\".segmentt\").style.width = `${this.state.length}px`\r\n         }, 1000)\r\n\r\n\r\n   }\r\n\r\n   stopTimer() {\r\n      clearInterval(this.timer)\r\n   }\r\n\r\n   resetTimer() {\r\n      clearInterval(this.timer)\r\n      this.setState({ count: 20, length: 1540 })\r\n   }\r\n\r\n   componentDidMount() {\r\n      if (this.state.autostart === true) {\r\n         this.startTimer()\r\n      }\r\n\r\n\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className='contaner'>\r\n            <h1>\r\n               Timer : {this.state.count}\r\n            </h1>\r\n            <button onClick={this.startTimer}>Start</button>\r\n            <button onClick={this.stopTimer}>Stop</button>\r\n            <button onClick={this.resetTimer}>Reset</button>\r\n            <div className=\"segmentt\"></div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\nexport default Timerr",["28","29"],{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":38,"column":14,"nodeType":"32","messageId":"33","endLine":38,"endColumn":21},{"ruleId":"35","severity":1,"message":"36","line":59,"column":32,"nodeType":"37","messageId":"38","endLine":59,"endColumn":34},{"ruleId":"30","severity":1,"message":"39","line":32,"column":11,"nodeType":"32","messageId":"33","endLine":32,"endColumn":19},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'segment' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'segmentt' is assigned a value but never used.","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-global-assign","no-unsafe-negation"]