{"version":3,"sources":["logo.svg","components/Timer-1.js","components/Timer-2.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","state","count","length","schritt","autostart","text","startTimer","bind","stopTimer","resetTimer","this","timer","setInterval","setState","clearInterval","console","log","document","querySelector","style","width","className","onClick","React","Component","Timerr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9cc1a21e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\n// import  { Component } from 'react'\r\n\r\nclass Timer extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         count: 10,\r\n         length: 1540,\r\n         schritt: 1,\r\n         autostart: false,\r\n         text: \"Час вийшов\"\r\n      }\r\n      this.startTimer = this.startTimer.bind(this)\r\n      this.stopTimer = this.stopTimer.bind(this)\r\n      this.resetTimer = this.resetTimer.bind(this)\r\n   }\r\n   \r\n   \r\n   startTimer() {\r\n      \r\n      this.timer = setInterval(() => {\r\n         if (this.state.count > 0) {\r\n            this.setState({\r\n               count: this.state.count - this.state.schritt,\r\n               length: this.state.length - 154\r\n               \r\n            })\r\n           \r\n         }\r\n         else{\r\n             clearInterval(this.timer)\r\n            this.setState({ count: \"Час вийшов\"})\r\n         }\r\n         console.log(this.state.count)\r\n         }, 1000)\r\n         let segment =\r\n            setInterval(() => {\r\n      \r\n               document.querySelector(\".segment\").style.width = `${this.state.length}px`\r\n            }, 1000)\r\n      \r\n      \r\n      }\r\n   \r\n   stopTimer() {\r\n      clearInterval(this.timer)\r\n   }\r\n\r\n   resetTimer() {\r\n      clearInterval(this.timer)\r\n      this.setState({ count: 10, length: 1540 })\r\n         \r\n      \r\n   }\r\n\r\n   componentDidMount() {\r\n      if (this.state.autostart === true) {\r\n         this.startTimer()\r\n      }\r\n      \r\n      \r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className='contaner'>\r\n            <h1 className=\"h1\"> \r\n               Timer : {this.state.count}\r\n            </h1>\r\n            <button onClick={this.startTimer}>Start</button>\r\n            <button onClick={this.stopTimer}>Stop</button>\r\n            <button onClick={this.resetTimer}>Reset</button>\r\n            <div className=\"segment\"></div>   \r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// class Timer extends Component {\r\n//    state = {\r\n//       text: \"hello world\",\r\n//       addtext: \"\",\r\n//       length: 1540,\r\n//       timeLeft: 100,\r\n//       time: null,\r\n//       intervalId: true\r\n//    }\r\n\r\n   \r\n//    pauseTimer = () => {\r\n//       this.setState({ intervalId: \"falce\" })\r\n      \r\n//    }\r\n//    startTimer = () => {\r\n        \r\n//       this.setState({ intervalId: true })\r\n//       let segment = setInterval(() => {\r\n//          // if (this.state.intervalId = true)\r\n//             document.querySelector(\".segment\").style.width = `${this.state.length}px`\r\n//       }, 1000)\r\n   \r\n//       const timer = () => {\r\n         \r\n//          this.setState({\r\n//             timeLeft: this.state.timeLeft - 1, length: this.state.length - 15.4\r\n//          })\r\n//        }\r\n      \r\n         \r\n//       setInterval(() => {\r\n//          if (this.state.intervalId === true) {\r\n//             timer()\r\n//          } else {\r\n//             clearInterval(bar)\r\n//          }\r\n//       }, 1000) \r\n//       return this.setState({ timeLeft: this.state.timeLeft - 1,length: this.state.length - 15.4 })\r\n//    }\r\n\r\n//    }\r\n   \r\n\r\n\r\n\r\n\r\n//    render() {\r\n//       return (\r\n//          <div className=\"timer\">\r\n//             <div className=\"segment\"  ></div>\r\n            \r\n//             <h1>{this.state.timeLeft} </h1>\r\n//             <button onClick={this.startTimer}>Запустити таймер</button>\r\n//             <button onClick={this.pauseTimer}>стоп таймер</button>\r\n//          </div>)\r\n//    }\r\n// }\r\nexport default Timer","import React from \"react\"\r\n// import  { Component } from 'react'\r\n\r\nclass Timerr extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         count: 20,\r\n         length: 1540,\r\n         schritt: 2,\r\n         autostart: true\r\n      }\r\n      this.startTimer = this.startTimer.bind(this)\r\n      this.stopTimer = this.stopTimer.bind(this)\r\n      this.resetTimer = this.resetTimer.bind(this)\r\n   }\r\n\r\n\r\n   startTimer() {\r\n\r\n      this.timer = setInterval(() => {\r\n         if (this.state.count > 0) {\r\n            this.setState({\r\n               count: this.state.count - this.state.schritt,\r\n               length: this.state.length - 154\r\n            })\r\n         } else {\r\n            clearInterval(this.timer)\r\n            this.setState({ count: \"Час вийшов\" })\r\n         }\r\n      }, 1000)\r\n      let segmentt =\r\n         setInterval(() => {\r\n\r\n            document.querySelector(\".segmentt\").style.width = `${this.state.length}px`\r\n         }, 1000)\r\n\r\n\r\n   }\r\n\r\n   stopTimer() {\r\n      clearInterval(this.timer)\r\n   }\r\n\r\n   resetTimer() {\r\n      clearInterval(this.timer)\r\n      this.setState({ count: 20, length: 1540 })\r\n   }\r\n\r\n   componentDidMount() {\r\n      if (this.state.autostart === true) {\r\n         this.startTimer()\r\n      }\r\n\r\n\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className='contaner'>\r\n            <h1>\r\n               Timer : {this.state.count}\r\n            </h1>\r\n            <button onClick={this.startTimer}>Start</button>\r\n            <button onClick={this.stopTimer}>Stop</button>\r\n            <button onClick={this.resetTimer}>Reset</button>\r\n            <div className=\"segmentt\"></div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\nexport default Timerr","import logo from './logo.svg';\nimport './App.css';\nimport Timer from \"./components/Timer-1.js\"\nimport Timerr from \"./components/Timer-2.js\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n      <Timerr/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}